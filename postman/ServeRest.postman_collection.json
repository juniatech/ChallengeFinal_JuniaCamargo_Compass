{
	"info": {
		"_postman_id": "b596a89a-750f-48fc-82fd-b31ea535a937",
		"name": "ServeRest",
		"description": "**O ServeRest é uma API REST gratuita que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\n**Não deixe de seguir o [autor do projeto](https://github.com/PauloGoncalvesBH) e deixar um star no repositório: [github.com/ServeRest/ServeRest](https://github.com/ServeRest/ServeRest)**\n\nEssa página documenta todas as rotas e como acessá-las. Para mais detalhes do ServeRest (como executar localmente utilizando Docker ou NPM, alterar timeout de autenticação, etc) acesse [o repositório do ServeRest](https://github.com/serverest/serverest).\n\nEstá utilizando Postman? Importe o [JSON do Swagger](https://raw.githubusercontent.com/ServeRest/ServeRest/trunk/docs/swagger.json) para ter acesso às collections.\n\nVai fazer teste de carga? Leia a seção '[Teste de Carga](https://github.com/ServeRest/ServeRest#teste-de-carga)'.\n\n\nMuito obrigado ♥ a todos que apoiam o projeto [financeiramente](https://opencollective.com/serverest#section-contributors) ou [com código, ideias e divulgação](https://github.com/ServeRest/ServeRest#contribuidores-), graças a vocês **mais de R$ 2000,00 foram doados para a ONG [Todas as letras](https://todasasletras.org/)** até o momento.\n\nO ServeRest possui um front, com status em beta, não deixe de conhecer: [front.serverest.dev](https://front.serverest.dev).\n\nPrecisa de apoio? [Abra uma issue](https://github.com/ServeRest/ServeRest/issues) ou contate o mantenedor do projeto:\n\n\nContact Support:\n Name: Paulo Gonçalves",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22411035"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Realizar login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"const jsonSchema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"authorization\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The message Schema\",\r",
									"            \"examples\": [\r",
									"                \"Login realizado com sucesso\"\r",
									"            ]\r",
									"        },\r",
									"        \"authorization\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The authorization Schema\",\r",
									"            \"examples\": [\r",
									"                \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjYzNzExNDk1LCJleHAiOjE2NjM3MTIwOTV9.KKgW5UdANX-ptGnbbub9W8loNxbabvs0IrhQXqnfQ6k\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"message\": \"Login realizado com sucesso\",\r",
									"        \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjYzNzExNDk1LCJleHAiOjE2NjM3MTIwOTV9.KKgW5UdANX-ptGnbbub9W8loNxbabvs0IrhQXqnfQ6k\"\r",
									"    }]\r",
									"}\r",
									"if (jsonData.code === (200)) {\r",
									"    console.log(\"Status code diferente de 200\");\r",
									"} else {\r",
									"    console.log(\"Status code 200\");\r",
									"    //Realizando asserção do contrato\r",
									"    pm.test(\"Contrato validado com sucesso!\", () => { pm.response.to.have.jsonSchema(jsonSchema); });\r",
									"    pm.test(\"Login realizado com sucesso!\", function () {\r",
									"        pm.expect(jsonData.message).to.eql(\"Login realizado com sucesso\")\r",
									"    });\r",
									"}\r",
									"\r",
									"// Coletar a autorização\r",
									"pm.collectionVariables.set(\"authorization\", jsonData.authorization)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
					},
					"response": [
						{
							"name": "Login realizado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Login realizado com sucesso\",\n  \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNTg5NzU4NzQ2LCJleHAiOjE1ODk3Njg3NDZ9.B6TASHV8k9xBerz4NSeFBlAZGSDhZlqESt767M0567I\"\n}"
						}
					]
				},
				{
					"name": "Realizar login Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"const jsonSchema = {\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"required\": [\r",
									"        \"message\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"if (jsonData.code === (401)) {\r",
									"    console.log(\"Status code diferente de 401\");\r",
									"} else {\r",
									"    console.log(\"Status code 401\");\r",
									"    //Realizando asserção do contrato\r",
									"    pm.test(\"Email e/ou senha inválidos\", () => { pm.response.to.have.jsonSchema(jsonSchema); });\r",
									"    pm.test(\"Email e/ou senha inválidos\", function() {\r",
									"        pm.expect(jsonData.message).to.eql(\"Email e/ou senha inválidos\")\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"junia@qa.com\",\n  \"password\": \"teste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
					},
					"response": [
						{
							"name": "E-mail e/ou senha inválidos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Email e/ou senha inválidos\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "usuarios",
			"item": [
				{
					"name": "{ id}",
					"item": [
						{
							"name": "Buscar usuário por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usuarios/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "0uxuPY0cbmQhpEz1",
											"description": "(Required) ID do usuário"
										}
									]
								}
							},
							"response": [
								{
									"name": "Usuário encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\",\n  \"_id\": \"0uxuPY0cbmQhpEz1\"\n}"
								},
								{
									"name": "Usuário não encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Usuário não encontrado\"\n}"
								}
							]
						},
						{
							"name": "Excluir usuário com carrinho",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usuarios/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "0uxuPY0cbmQhpEz1",
											"description": "(Required) ID do usuário"
										}
									]
								},
								"description": "Não é permitido excluir usuário com carrinho."
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Nenhum registro excluído",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Registro excluído com sucesso | Nenhum registro excluído\"\n}"
								},
								{
									"name": "Usuário com carrinho cadastrado",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Não é permitido excluir usuário com carrinho cadastrado\",\n  \"idCarrinho\": \"qbMqntef4iTOwWfg\"\n}"
								}
							]
						},
						{
							"name": "Editar usuário",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "0uxuPY0cbmQhpEz1",
											"description": "(Required) ID do usuário"
										}
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
							},
							"response": [
								{
									"name": "Alterado com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Registro alterado com sucesso\"\n}"
								},
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Este email já está sendo usado\"\n}"
								}
							]
						},
						{
							"name": "Excluir usuário | Nenhum registro excluído",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Excluir usuário | Teste de erro",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios/?._id=0eXlFSOrkmxpxYyM",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										""
									],
									"query": [
										{
											"key": "._id",
											"value": "0eXlFSOrkmxpxYyM"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Excluir usuário",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios/._id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										"._id"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Listar usuários cadastrados",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios?_id=consectetur eiusmod&nome=consectetur eiusmod&email=consectetur eiusmod&password=consectetur eiusmod&administrador=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							],
							"query": [
								{
									"key": "_id",
									"value": "consectetur eiusmod"
								},
								{
									"key": "nome",
									"value": "consectetur eiusmod"
								},
								{
									"key": "email",
									"value": "consectetur eiusmod"
								},
								{
									"key": "password",
									"value": "consectetur eiusmod"
								},
								{
									"key": "administrador",
									"value": "false"
								}
							]
						}
					},
					"response": [
						{
							"name": "Lista de usuários",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios?_id=consectetur eiusmod&nome=consectetur eiusmod&email=consectetur eiusmod&password=consectetur eiusmod&administrador=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "_id",
											"value": "consectetur eiusmod"
										},
										{
											"key": "nome",
											"value": "consectetur eiusmod"
										},
										{
											"key": "email",
											"value": "consectetur eiusmod"
										},
										{
											"key": "password",
											"value": "consectetur eiusmod"
										},
										{
											"key": "administrador",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"quantidade\": 1,\n  \"usuarios\": [\n    {\n      \"nome\": \"Fulano da Silva\",\n      \"email\": \"beltrano@qa.com.br\",\n      \"password\": \"teste\",\n      \"administrador\": \"true\",\n      \"_id\": \"0uxuPY0cbmQhpEz1\"\n    },\n    {\n      \"nome\": \"Fulano da Silva\",\n      \"email\": \"beltrano@qa.com.br\",\n      \"password\": \"teste\",\n      \"administrador\": \"true\",\n      \"_id\": \"0uxuPY0cbmQhpEz1\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Cadastrar usuário",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						},
						"description": "Não é permitido cadastrar usuário com email já utilizado"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
						},
						{
							"name": "E-mail já cadastrado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Este email já está sendo usado\"\n}"
						}
					]
				},
				{
					"name": "E-mail já cadastrado",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Fulano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						},
						"description": "Não é permitido cadastrar usuário com email já utilizado"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
						},
						{
							"name": "E-mail já cadastrado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Este email já está sendo usado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "produtos",
			"item": [
				{
					"name": "{ id}",
					"item": [
						{
							"name": "Buscar produto por ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "BeeJh5lz3k6kSIzA",
											"description": "(Required) ID do produto"
										}
									]
								}
							},
							"response": [
								{
									"name": "Produto encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "BeeJh5lz3k6kSIzA",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nome\": \"Logitech MX Vertical\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381,\n  \"_id\": \"BeeJh5lz3k6kSIzA\"\n}"
								},
								{
									"name": "Produto não encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "BeeJh5lz3k6kSIzA",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Produto não encontrado\"\n}"
								}
							]
						},
						{
							"name": "Excluir produto",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "0uxuPY0cbmQhpEz1",
											"description": "(Required) ID do produto"
										}
									]
								},
								"description": "Não é permitido excluir produto que faz parte de carrinho."
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Nenhum registro excluído",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Registro excluído com sucesso | Nenhum registro excluído\"\n}"
								},
								{
									"name": "Produto faz parte de carrinho",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Não é permitido excluir produto que faz parte de carrinho\",\n  \"idCarrinho\": [\n    \"qbMqntef4iTOwWfg, yILJY1eaAUC6hyRc\",\n    \"qbMqntef4iTOwWfg, yILJY1eaAUC6hyRc\"\n  ]\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Rota exclusiva para administradores\"\n}"
								}
							]
						},
						{
							"name": "Editar produto",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Logitech MX Vertical\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "0uxuPY0cbmQhpEz1",
											"description": "(Required) ID do produto"
										}
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
							},
							"response": [
								{
									"name": "Alterado com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Registro alterado com sucesso\"\n}"
								},
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Já existe produto com esse nome\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "0uxuPY0cbmQhpEz1",
													"description": "(Required) ID do produto"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Rota exclusiva para administradores\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Listar produtos cadastrados",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos?_id=consectetur eiusmod&nome=consectetur eiusmod&preco=7186146&descricao=consectetur eiusmod&quantidade=92277005",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							],
							"query": [
								{
									"key": "_id",
									"value": "consectetur eiusmod"
								},
								{
									"key": "nome",
									"value": "consectetur eiusmod"
								},
								{
									"key": "preco",
									"value": "7186146"
								},
								{
									"key": "descricao",
									"value": "consectetur eiusmod"
								},
								{
									"key": "quantidade",
									"value": "92277005"
								}
							]
						}
					},
					"response": [
						{
							"name": "Lista de produtos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/produtos?_id=consectetur eiusmod&nome=consectetur eiusmod&preco=7186146&descricao=consectetur eiusmod&quantidade=92277005",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									],
									"query": [
										{
											"key": "_id",
											"value": "consectetur eiusmod"
										},
										{
											"key": "nome",
											"value": "consectetur eiusmod"
										},
										{
											"key": "preco",
											"value": "7186146"
										},
										{
											"key": "descricao",
											"value": "consectetur eiusmod"
										},
										{
											"key": "quantidade",
											"value": "92277005"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"quantidade\": 2,\n  \"usuarios\": [\n    {\n      \"nome\": \"Logitech MX Vertical\",\n      \"preco\": 470,\n      \"descricao\": \"Mouse\",\n      \"quantidade\": 381,\n      \"_id\": \"BeeJh5lz3k6kSIzA\"\n    },\n    {\n      \"nome\": \"Samsung 60 polegadas\",\n      \"preco\": 5240,\n      \"descricao\": \"TV\",\n      \"quantidade\": 49977,\n      \"_id\": \"K6leHdftCeOJj8BJ\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Cadastrar produto",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Logitech MX Vertical\",\n  \"preco\": 470,\n  \"descricao\": \"Mouse\",\n  \"quantidade\": 381\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						},
						"description": "Não é permitido cadastrar produto com nome já utilizado"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
						},
						{
							"name": "Já existe produto com esse nome",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Já existe produto com esse nome\"\n}"
						},
						{
							"name": "Token ausente, inválido ou expirado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
						},
						{
							"name": "Rota exclusiva para administradores (`administrador = true`)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Rota exclusiva para administradores\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "carrinhos",
			"item": [
				{
					"name": "Listar carrinhos cadastrados",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carrinhos?_id=consectetur eiusmod&precoTotal=7186146&quantidadeTotal=92277005&idUsuario=consectetur eiusmod",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							],
							"query": [
								{
									"key": "_id",
									"value": "consectetur eiusmod"
								},
								{
									"key": "precoTotal",
									"value": "7186146"
								},
								{
									"key": "quantidadeTotal",
									"value": "92277005"
								},
								{
									"key": "idUsuario",
									"value": "consectetur eiusmod"
								}
							]
						},
						"description": "Os carrinhos retornados são únicos por usuário"
					},
					"response": [
						{
							"name": "Lista de carrinhos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/carrinhos?_id=consectetur eiusmod&precoTotal=7186146&quantidadeTotal=92277005&idUsuario=consectetur eiusmod",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									],
									"query": [
										{
											"key": "_id",
											"value": "consectetur eiusmod"
										},
										{
											"key": "precoTotal",
											"value": "7186146"
										},
										{
											"key": "quantidadeTotal",
											"value": "92277005"
										},
										{
											"key": "idUsuario",
											"value": "consectetur eiusmod"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"quantidade\": 1,\n  \"carrinhos\": [\n    {\n      \"produtos\": [\n        {\n          \"idProduto\": \"deserunt adipisicing dolor non\",\n          \"quantidade\": 78600975,\n          \"precoUnitario\": -95921944\n        },\n        {\n          \"idProduto\": \"aliquip ut\",\n          \"quantidade\": 60316353,\n          \"precoUnitario\": 45074618\n        }\n      ],\n      \"precoTotal\": 10950,\n      \"quantidadeTotal\": 3,\n      \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n      \"_id\": \"aFOUqntef4iaOwWfg\"\n    },\n    {\n      \"produtos\": [\n        {\n          \"idProduto\": \"irure dolor\",\n          \"quantidade\": 12742018,\n          \"precoUnitario\": -35841668\n        },\n        {\n          \"idProduto\": \"labori\",\n          \"quantidade\": 75555235,\n          \"precoUnitario\": 92024078\n        }\n      ],\n      \"precoTotal\": 10950,\n      \"quantidadeTotal\": 3,\n      \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n      \"_id\": \"aFOUqntef4iaOwWfg\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Cadastrar carrinho",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"dolore\",\n    \"quantidade\": -9019970\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						},
						"description": "O carrinho é vinculado ao usuário do token enviado no header `Authorization`, sendo possível cadastrar apenas 1 carrinho por usuário.\nAo cadastrar carrinho com sucesso é feita a redução da quantidade no cadastro de cada produto inserido no carrinho.\n"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"dolore\",\n    \"quantidade\": -9019970\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Cadastro realizado com sucesso\",\n  \"_id\": \"jogfODIlXsqxNFS2\"\n}"
						},
						{
							"name": "Algo deu errado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"dolore\",\n    \"quantidade\": -9019970\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Não é permitido possuir produto duplicado | Não é permitido ter mais de 1 carrinho | Produto não encontrado | Produto não possui quantidade suficiente\"\n}"
						},
						{
							"name": "Token ausente, inválido ou expirado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"dolore\",\n    \"quantidade\": -9019970\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
						}
					]
				},
				{
					"name": "Buscar carrinho por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/:_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								":_id"
							],
							"variable": [
								{
									"key": "_id",
									"value": "qbMqntef4iTOwWfg",
									"description": "(Required) ID do carrinho"
								}
							]
						}
					},
					"response": [
						{
							"name": "Carrinho encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "qbMqntef4iTOwWfg",
											"description": "(Required) ID do carrinho"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"eiusmod labore nisi quis\",\n      \"quantidade\": 94747848,\n      \"precoUnitario\": 17533991\n    },\n    {\n      \"idProduto\": \"pariatur dolor proident consequat\",\n      \"quantidade\": 25099169,\n      \"precoUnitario\": -96338433\n    }\n  ],\n  \"precoTotal\": 6180,\n  \"quantidadeTotal\": 3,\n  \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n  \"_id\": \"qbMqntef4iTOwWfg\"\n}"
						},
						{
							"name": "Carrinho não encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "qbMqntef4iTOwWfg",
											"description": "(Required) ID do carrinho"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Carrinho não encontrado\"\n}"
						}
					]
				},
				{
					"name": "Excluir carrinho",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/concluir-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"concluir-compra"
							]
						},
						"description": "Ao concluir uma compra o carrinho é excluído.\nO carrinho excluído será o vinculado ao usuário do `token` utilizado.\n"
					},
					"response": [
						{
							"name": "Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/concluir-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"concluir-compra"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário\"\n}"
						},
						{
							"name": "Token ausente, inválido ou expirado",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/concluir-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"concluir-compra"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
						}
					]
				},
				{
					"name": "Excluir carrinho e retornar produtos para estoque",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"cancelar-compra"
							]
						},
						"description": "Ao cancelar uma compra o carrinho é excluído e o estoque dos produtos desse carrinho é reabastecido.\nO carrinho excluído será o vinculado ao usuário do `token` utilizado.\n"
					},
					"response": [
						{
							"name": "Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"cancelar-compra"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário\"\n}"
						},
						{
							"name": "Token ausente, inválido ou expirado",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"cancelar-compra"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "//localhost:3000",
			"type": "string"
		},
		{
			"key": "authorization",
			"value": ""
		}
	]
}